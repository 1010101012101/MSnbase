% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataClasses.R, R/methods-QuantitationParam.R
\docType{class}
\name{QuantitationParam-class}
\alias{QuantitationParam-class}
\alias{.QuantitationParam}
\alias{QuantitationParam}
\alias{IsobaricTagging}
\alias{SpectralCounting}
\alias{IsobaricTagging}
\alias{SpectralCounting}
\alias{show,QuantitationParam-method}
\title{Quantitation parameter class}
\usage{
IsobaricTagging(reporters, msLevel, method = c("max", "trapezoidation",
  "sum"))

SpectralCounting(method = c("count", "tic", "SI", "SIgi", "SIn", "SAF",
  "NSAF"), pepseq = "sequence", dbaccess = "DatabaseAccess",
  plength = "DBseqLength", nprot = "nprot")

\S4method{show}{QuantitationParam}(object)
}
\arguments{
\item{reporters}{See class slot.}

\item{msLevel}{See class slot.}

\item{method}{See class slot.}

\item{pepseq}{See class slot.}

\item{dbaccess}{See class slot.}

\item{plength}{See class slot.}

\item{nprot}{See class slot.}

\item{object}{Object of class `QuantiationParam`.}
}
\description{
\code{QuantitationParam} object are used to define the
type of quantitation to perform. These objects are then passed
with the raw data object to the \code{\link[=quantify]{quantify()}}
method. \code{QuantitationParam} objects are rarely created
directly; instead, users should use the predefined constructor
functions \code{IsobaricTagging} and \code{SpectralCounting}.
}
\section{Slots}{

\describe{
\item{\code{msLevel}}{\code{integer(1)} setting the MS level at which
quantitation should be done. It is generally set automatically
for a method (for instance 2 for spectral counting) or from
the data, if absent in the \code{QuantitationParam} object (the
highest MS level in the data, i.e. 2 or 3, for isobaric
tagging).}

\item{\code{reporters}}{The reporter ions to use, as an
\code{\link[=ReporterIons]{ReporterIons()}}. For isobaric tagging quantation only.}

\item{\code{method}}{\code{character(1)} defining the method of
quantitation. For isobaric tagging, the easiest and fastest
approach is to take the maximum (\code{"max"}, default) of a peak,
which is also the only approach for centroided data. In case
of profile data, a trapezoidation method (\code{"trapezoidation"})
is also available. Summing peaks is also possible, albeit
hardly used (\code{"sum"}).\preformatted{For spectral counting, one of `"count"` (spectral counting,
default), `"tic"` (total ion current, as returned by [tic]),
`"SI"` (spectral index), `"SIgi"`(global intensity spectral
index), `"SIn"` (normalised spectral index), `"SAF"` (spectral
abundance factor) or `"NSAF"` (normalised spectral abundance
factor). These methods work irrespective of their profile or
centroided mode of the data.

The `"count"` method counts the occurrence of the identified
spectra, which then can then be used as input to
[combineFeatures()] to implement spectra counting at the
peptide and protein level (see example in [quantify]). The
sequence of a peptide is defined by setting `pepseq` in the
`SpectralCouting` constructor (default is `sequence`). When
using the `"count"` method, MS2 spectra that have been
identified get couted as 1, MS2 spectra that haven't been
identified are counted as 0 and any other MS levels, if
present, as assigned an `NA`.

The `SI*` and `*SAF` require three additional arguments,
namely the protein accession of identifiers (`dbaccess`, with
default value `"DatabaseAccess"`), the protein lengths
(`plength`, with default value `"DBseqLength"`) and the number
of groups the feature is assigned to (`nprot`, with default
`"nprot"`). The latter is used to filter out features that are
assigned to multiple groups These values are available if the
identification data had been collated using
[addIdentificationData()]. These methods also require MS2 data
only and will first filter other MS levels out is present.
}}

\item{\code{pepseq}}{\code{character(1)} defining the feture variable name
defining the peptide sequence (required for spectral
counting). Default is \code{"sequence"}.}

\item{\code{methargs}}{A \code{list} of additional argument applied to the
quantitation method.}

\item{\code{name}}{\code{characater(1)} naming the quantiation parameter.}

\item{\code{wd}}{\code{numeric(1)} defining the width around the experter
isobaric tag mass to seach for a peak. If omitted, is
extracted from the \code{ReporterIons} object. For isobaric tagging
quantation only.}

\item{\code{strict}}{\code{logical(1)} defining if a peak should be quantified
beyond the reporter tag +/- the width. If \code{TRUE}, once the
apex(es) is/are identified, only data points within apex +/-
width of reporters (see \code{\link[=ReporterIons]{ReporterIons()}} are used for
quantitation. Otherwise, quantitation is performed using data
points along the entire width of a peak. For isobaric tagging
quantation only.}

\item{\code{pepseq}}{\code{character(1)} naming the feature variable
documenting the peptide sequence (default is \code{"sequence"}).}

\item{\code{dbaccess}}{\code{character(1)} naming the feature variable
documenting the protein database accession (default is
\code{"DatabaseAccess"}).}

\item{\code{plength}}{\code{character(1)} naming the feature variable
documenting the protein length (default is \code{"DBseqLength"}).}

\item{\code{nprot}}{\code{character(1)} naming the feature variable documenting
how many groups this feature is assigned to (default is
\code{"nprot"}).}

\item{\code{.__classVersion__}}{The version of the \code{QuantitationParam}
class definition.}
}}

\examples{
## Isobaric tagging using iTRAQ 4-plex
IsobaricTagging(iTRAQ4)
## Isobaric tagging using TMT 11-plex at the MS3 level
IsobaricTagging(TMT11, msLevel = 3L)
## Isobaric tagging using TMT 11-plex at the MS2 level
IsobaricTagging(TMT11, msLevel = 2L)

## Spectral counting, raw counts
SpectralCounting()
## Spectral counting, normalised spectral abundance factor
SpectralCounting("NSAF")
}
\references{
For details about the spectral index (SI), see Griffin NM, Yu J,
Long F, Oh P, Shore S, Li Y, Koziol JA, Schnitzer JE.
\emph{Label-free, normalized quantification of complex mass
spectrometry data for proteomic analysis}. Nat Biotechnol. 2010
Jan;28(1):83-9. doi: 10.1038/nbt.1592. PMID: 20010810; PubMed
Central PMCID: PMC2805705.

For details about the spectra abundance factor, see Paoletti AC,
Parmely TJ, Tomomori-Sato C, Sato S, Zhu D, Conaway RC, Conaway
JW, Florens L, Washburn MP. \emph{Quantitative proteomic analysis of
distinct mammalian Mediator complexes using normalized spectral
abundance factors}. PNAS. 2006 Dec 12;103(50):18928-33. PMID:
17138671; PubMed Central PMCID: PMC1672612.

Thompson A, Schafer J, Kuhn K, Kienle S, Schwarz J, Schmidt G,
Neumann T, Johnstone R, Mohammed AK, Hamon C. \emph{Tandem mass tags: a
novel quantification strategy for comparative analysis of complex
protein mixtures by MS/MS}. Anal Chem. 2003 Apr
15;75(8):1895-904. PubMed PMID: 12713048.

Ross PL, Huang YN, Marchese JN, Williamson B, Parker K, Hattan S,
Khainovski N, Pillai S, Dey S, Daniels S, Purkayastha S, Juhasz P,
Martin S, Bartlet-Jones M, He F, Jacobson A, Pappin
DJ. \emph{Multiplexed protein quantitation in Saccharomyces cerevisiae
using amine-reactive isobaric tagging reagents}. Mol Cell
Proteomics. 2004 Dec;3(12):1154-69. Epub 2004 Sep 22. PubMed PMID:
15385600.
}
\seealso{
quantify

The example in the \link{quantify} manual page.
}
\author{
Laurent Gatto
}
